"""
Repack a bazel python_zip_file (the same thing generated by specifying 'bazel build
--build_python_zip') into a tarfile that extracts into a runnable application.
"""

import argparse
import io
import pathlib
import tarfile
import zipfile


def main():
    args = _parse_args()
    run(src=args.src, dst=args.dst, package_dir=args.package_dir, main=args.main)


def _parse_args():
    parser = argparse.ArgumentParser(description=__doc__)

    parser.add_argument(
        "--src",
        help="Path to the source .zip file.",
        required=True,
    )
    parser.add_argument(
        "--dst",
        help="Path to the output .tar file.",
        required=True,
    )
    parser.add_argument(
        "--package-dir",
        help="The directory in which to expand the specified files.",
        type=pathlib.Path,
        required=True,
    )
    parser.add_argument(
        "--main",
        help="The __main__.py for the output tar.",
        type=pathlib.Path,
        required=True,
    )

    return parser.parse_args()


def run(src: str, dst: str, package_dir: pathlib.Path, main: pathlib.Path):
    with zipfile.ZipFile(src, "r") as z_in:
        with tarfile.TarFile(dst, "w") as z_out:
            addfile = _make_addfile(z_out, package_dir)

            for info in z_in.infolist():
                # Override the __main__.py from the python_zip_file.
                if info.filename == "__main__.py":
                    addfile(info.filename, main.read_bytes(), mode=0o755)
                else:
                    addfile(
                        info.filename,
                        z_in.read(info.filename),
                        mode=info.external_attr >> 16 or 0o644,
                    )


def _make_addfile(z_out: tarfile.TarFile, package_dir: pathlib.Path):
    def addfile(filename: str, data: bytes, *, mode: int) -> None:
        tarinfo = tarfile.TarInfo(str(package_dir / filename))
        tarinfo.size = len(data)
        tarinfo.mode = mode
        z_out.addfile(tarinfo, io.BytesIO(data))

    return addfile


if __name__ == "__main__":
    main()
