diff --git a/defs.bzl b/defs.bzl
index 9a327f6..721f7a7 100644
--- a/defs.bzl
+++ b/defs.bzl
@@ -4,6 +4,24 @@ load("@rules_python//python:defs.bzl", "py_test")
 
 pip_vendor_label = Label("@com_github_ali5h_rules_pip//:third_party/py/easy_install.py")
 
+def _get_platform(repository_ctx):
+    if "mac" in repository_ctx.os.name:
+        return "osx"
+
+    return repository_ctx.os.name
+
+def _select_requirements_for_platform(repository_ctx):
+    current_platform = _get_platform(repository_ctx)
+
+    for label, intended_platform in repository_ctx.attr.requirements_per_platform.items():
+        if intended_platform == current_platform:
+            return repository_ctx.path(label)
+
+    fail(
+        "None of the given requirements files match the current environment",
+        attr = "pip_repository",
+    )
+
 def _execute(repository_ctx, arguments, quiet = False):
     pip_vendor = str(repository_ctx.path(pip_vendor_label).dirname)
     return repository_ctx.execute(arguments, environment = {
@@ -17,8 +35,18 @@ def _pip_import_impl(repository_ctx):
     if repository_ctx.attr.python_runtime:
         python_interpreter = repository_ctx.path(repository_ctx.attr.python_runtime)
 
+    if repository_ctx.attr.requirements:
+        requirements_path = repository_ctx.path(repository_ctx.attr.requirements)
+    elif repository_ctx.attr.requirements_per_platform:
+        requirements_path = _select_requirements_for_platform(repository_ctx)
+    else:
+        fail(
+            "Either 'requirements' or 'requirements_per_platform' is required",
+            attr = "pip_repository",
+        )
+
     repository_ctx.file("BUILD", "")
-    reqs = repository_ctx.read(repository_ctx.attr.requirements)
+    reqs = repository_ctx.read(requirements_path)
 
     # make a copy for compile
     repository_ctx.file("requirements.txt", content = reqs, executable = False)
@@ -80,9 +108,13 @@ def _pip_import_impl(repository_ctx):
 pip_import = repository_rule(
     attrs = {
         "requirements": attr.label(
-            mandatory = True,
             allow_single_file = True,
-            doc = "requirement.txt file generatd by pip-compile",
+            doc = "requirement.txt file generated by pip-compile",
+        ),
+        "requirements_per_platform": attr.label_keyed_string_dict(
+            allow_files = True,
+            allow_empty = False,
+            doc = "dict mapping from requirements.txt files to the platform they're applicable on.",
         ),
         "python_interpreter": attr.string(default = "python", doc = """
 The command to run the Python interpreter used to invoke pip and unpack the
